{"version":3,"sources":["services/phoneNumbers.js","App.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","newPerson","post","id","delete","changedContact","put","catch","error","Notification","notification","style","background","fontSize","borderRadius","border","padding","color","Button","onClick","Input","text","onChange","value","Form","onSubmit","getNewName","getNewNumber","newName","newNumber","type","Contact","persons","filteredContact","removeContact","map","person","name","number","filter","toLocaleLowerCase","includes","toLowerCase","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","services","phoneNumbers","console","log","addName","find","alert","contactToChange","changeNumber","sentPerson","concat","setTimeout","recievedContact","phoneNumber","e","target","preventDefault","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78edb012.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n                .then(response =>response.data)\r\n}\r\nconst create = newPerson => {\r\n   return axios.post(baseUrl,newPerson)\r\n        .then(response => response.data)\r\n}\r\nconst update = (changedContact) =>{\r\n    return axios.put(`${baseUrl}/${changedContact.id}`,changedContact)\r\n                .then(response => response.data)\r\n                .catch(error =>{\r\n                    return null\r\n                })\r\n        \r\n}\r\nconst remove = id => {\r\n    axios.delete(`${baseUrl}/${id}`)\r\n    return getAll()\r\n}\r\n\r\nexport default {getAll,create,remove,update}\r\n","import React, { useState,useEffect } from 'react'\nimport services from './services/phoneNumbers'\n\nconst Notification = ({notification}) => {\n  if (notification === '')\n      return null\n  const notficationStyle = {\n      background:\"lightgrey\",\n      fontSize:24,\n      borderRadius:10,\n      border:'1px solid',\n      padding:20,\n      color:'green'\n  }\n  return(\n    <>\n    <p style = {notficationStyle}>{notification}</p>\n    </>\n  )\n}\nconst Button = ({id,onClick}) => <button onClick = {()=>onClick(id)}>Delete</button>\nconst Input = ({text,onChange,value}) => <div>{text} <input onChange = {onChange} value = {value}/> </div>\nconst Form = ({onSubmit,getNewName,getNewNumber,newName,newNumber}) =>{\n  return(\n    <form onSubmit = {onSubmit}>\n      <Input onChange = {getNewName} value = {newName} text = \"name:\"/>\n      <Input onChange = {getNewNumber} value = {newNumber} text = \"number\"/>\n      <button type=\"submit\">add</button>\n      </form>\n  )\n}\nconst Contact = ({persons,filteredContact,removeContact}) => {\n  if (filteredContact === '')\n  return(\n     <> \n      {persons.map(person=>{\n      return(\n        <div key = {person.id}>\n          <li >{person.name} {person.number}</li>\n          <Button onClick = {removeContact} id = {person.id} />\n      </div>\n      )\n    })}\n    </>\n    )\n  else return(\n    <>\n    {persons.filter(person =>person.name.toLocaleLowerCase().includes(filteredContact.toLowerCase()))\n    .map(person=>{\n      return(\n        <div key = {person.id}>\n          <li >{person.name} {person.number}</li>\n          <Button onClick = {removeContact} id = {person.id} />\n      </div>\n      )\n    })}\n    </>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('');\n  const [newNumber,setNewNumber] = useState('');\n  const [filteredContact,setFilter] = useState('');\n  const [notification,setNotification] = useState('')\n  useEffect(()=>{\n    services.getAll().then(phoneNumbers =>{\n      console.log(phoneNumbers)\n      setPersons(phoneNumbers);\n    })\n    \n  },[]) \n\n  const addContact = (e) =>{\n    e.preventDefault();\n    if (newName === '' || newNumber === '')\n        alert('You must fill all fields');\n    else{\n      addName();\n    }\n  }\n\n  const addName = () =>{\n    if (persons.find(person=>person.name === newName))\n    {\n      if (persons.find(person=>person.number === newNumber))\n        alert(`${newName} already in PhoneBook`)\n      else {\n        const contactToChange = persons.find(person=>person.name === newName)\n        const changedContact = {...contactToChange, number:newNumber}\n        changeNumber(changedContact)\n      }\n    }\n      \n    else{\n      const newPerson = {\n        name:newName,\n        number:newNumber,\n      }\n      services.create(newPerson).then(sentPerson=>{\n        setPersons(persons.concat(sentPerson));\n        setNewName('');\n        setNewNumber('');\n        setNotification(`${newPerson.name} was added to your phonebook`)\n        setTimeout(()=>{\n          setNotification('')\n        },3000)\n      })\n    }\n  }\n  const changeNumber = (changedContact) =>{\n    services.update(changedContact)\n            .then(recievedContact =>{\n              if (recievedContact === null){\n                setPersons(persons.filter(phoneNumber => (phoneNumber.id !== changedContact.id)));\n                setNotification(`${changedContact.name} was already delted from your phonebook`)\n                setTimeout(()=>{\n                  setNotification('')\n                },3000)\n              }\n              else{\n                setPersons(persons.map(person => person.id !== recievedContact.id\n                  ?person:recievedContact))\n                setNotification(`${recievedContact.name} was added to your phonebook`)\n                setTimeout(()=>{\n                setNotification('')\n                },3000)\n              }\n              setNewName('');\n              setNewNumber('');\n            })\n  }\n  const removeContact = id => {\n    const makeSure = window.confirm(\"Are you sure you want to remove this contact?\");\n    if(makeSure)\n      {\n        services.remove(id).then(phoneNumbers =>{\n          setPersons(phoneNumbers.filter(phoneNumber => (phoneNumber.id !== id)));\n        })\n     }\n  }\n  \n  \n  const getNewName = (e) => setNewName(e.target.value) \n  const getNewNumber = (e) => setNewNumber(e.target.value)\n  const getFilteredContact = (e) => setFilter(e.target.value)\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification = {notification} />\n      <Input onChange = {getFilteredContact} value = {filteredContact} text = \"Show By:\"/>\n      <h2>Add Contacts</h2>\n      <Form onSubmit = {addContact} getNewName = {getNewName} getNewNumber ={getNewNumber} newName ={newName} newNumber = {newNumber} />\n      <h2>Numbers</h2>\n      <Contact persons = {persons} filteredContact = {filteredContact} removeContact ={removeContact}/>\n      ...\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}